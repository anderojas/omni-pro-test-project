plugins {
    id 'java'
    id "net.serenity-bdd.serenity-gradle-plugin" version "3.4.2"
}

group = 'org.omni.pro'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

defaultTasks 'clean','test','aggregate'

ext {
    slf4jVersion = '1.7.7'
    serenityCoreVersion = '3.4.3'
    junitVersion = '5.8.2'
    assertJVersion = '3.22.0'
    logbackVersion = '1.2.10'
}

dependencies {
    testImplementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-cucumber:${serenityCoreVersion}",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter:${junitVersion}",
            "org.junit.vintage:junit-vintage-engine:${junitVersion}",
            "org.assertj:assertj-core:${assertJVersion}",
            "ch.qos.logback:logback-classic:${logbackVersion}"
    testImplementation 'junit:junit:4.13.1'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

serenity {
    testRoot = "src.test.resources.features"
    requirementsBaseDir = "src/test/resources/features"
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)